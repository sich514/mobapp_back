from fastapi import FastAPI, UploadFile, File
from fastapi.middleware.cors import CORSMiddleware
import datetime
import base64

from openai import OpenAI

# üîê –¢–≤–æ–π API-–∫–ª—é—á
client = OpenAI(api_key='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')

app = FastAPI()

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

def encode_image_bytes(image_bytes: bytes) -> str:
    return f"data:image/jpeg;base64,{base64.b64encode(image_bytes).decode('utf-8')}"

@app.post("/analyze-meal")
async def analyze_meal(file: UploadFile = File(...)):
    print(f"üì• –ü–æ–ª—É—á–µ–Ω —Ñ–∞–π–ª: {file.filename}")

    # ‚¨áÔ∏è –ß—Ç–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    image_bytes = await file.read()
    base64_image = encode_image_bytes(image_bytes)

    # üì° –ó–∞–ø—Ä–æ—Å –∫ OpenAI Vision (gpt-4.1)
    response = client.responses.create(
        model="gpt-4.1",
        input=[
            {
                "role": "user",
                "content": [
                    {
                        "type": "input_text",
                        "text": (
                            "–ï—Å–ª–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –µ—Å—Ç—å –µ–¥–∞ ‚Äî –ø–æ—Å—á–∏—Ç–∞–π –µ—ë —Å—É–º–º–∞—Ä–Ω—É—é –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å. "
                            "–í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: 520"
                        )
                    },
                    {
                        "type": "input_image",
                        "image_url": base64_image,
                    }
                ]
            }
        ]
    )

    raw = response.output_text.strip()
    print(f"üîé –û—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏: {raw}")

    # ‚ú® –§–æ—Ä–º–∏—Ä—É–µ–º API-–æ—Ç–≤–µ—Ç –≤ –Ω—É–∂–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
    return {
        "name": "Meal",
        "calories": f"{raw} kcal",
        "description": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π –ø—Ä–∏—ë–º –ø–∏—â–∏ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é.",
        "timestamp": datetime.datetime.utcnow().isoformat()
    }
